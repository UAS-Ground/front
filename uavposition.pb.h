// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: uavposition.proto

#ifndef PROTOBUF_uavposition_2eproto__INCLUDED
#define PROTOBUF_uavposition_2eproto__INCLUDED

#include <string.h>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace uavccsds {
class PositionReport;
class PositionReportDefaultTypeInternal;
extern PositionReportDefaultTypeInternal _PositionReport_default_instance_;
}  // namespace uavccsds

namespace uavccsds {

namespace protobuf_uavposition_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_uavposition_2eproto

enum PositionReport_PositionDimension {
  PositionReport_PositionDimension_TWO = 0,
  PositionReport_PositionDimension_THREE = 1,
  PositionReport_PositionDimension_PositionReport_PositionDimension_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PositionReport_PositionDimension_PositionReport_PositionDimension_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PositionReport_PositionDimension_IsValid(int value);
const PositionReport_PositionDimension PositionReport_PositionDimension_PositionDimension_MIN = PositionReport_PositionDimension_TWO;
const PositionReport_PositionDimension PositionReport_PositionDimension_PositionDimension_MAX = PositionReport_PositionDimension_THREE;
const int PositionReport_PositionDimension_PositionDimension_ARRAYSIZE = PositionReport_PositionDimension_PositionDimension_MAX + 1;

const ::google::protobuf::EnumDescriptor* PositionReport_PositionDimension_descriptor();
inline const ::std::string& PositionReport_PositionDimension_Name(PositionReport_PositionDimension value) {
  return ::google::protobuf::internal::NameOfEnum(
    PositionReport_PositionDimension_descriptor(), value);
}
inline bool PositionReport_PositionDimension_Parse(
    const ::std::string& name, PositionReport_PositionDimension* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PositionReport_PositionDimension>(
    PositionReport_PositionDimension_descriptor(), name, value);
}
// ===================================================================

class PositionReport : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:uavccsds.PositionReport) */ {
 public:
  PositionReport();
  virtual ~PositionReport();

  PositionReport(const PositionReport& from);

  inline PositionReport& operator=(const PositionReport& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PositionReport& default_instance();

  static inline const PositionReport* internal_default_instance() {
    return reinterpret_cast<const PositionReport*>(
               &_PositionReport_default_instance_);
  }

  void Swap(PositionReport* other);

  // implements Message ----------------------------------------------

  inline PositionReport* New() const PROTOBUF_FINAL { return New(NULL); }

  PositionReport* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PositionReport& from);
  void MergeFrom(const PositionReport& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PositionReport* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PositionReport_PositionDimension PositionDimension;
  static const PositionDimension TWO =
    PositionReport_PositionDimension_TWO;
  static const PositionDimension THREE =
    PositionReport_PositionDimension_THREE;
  static inline bool PositionDimension_IsValid(int value) {
    return PositionReport_PositionDimension_IsValid(value);
  }
  static const PositionDimension PositionDimension_MIN =
    PositionReport_PositionDimension_PositionDimension_MIN;
  static const PositionDimension PositionDimension_MAX =
    PositionReport_PositionDimension_PositionDimension_MAX;
  static const int PositionDimension_ARRAYSIZE =
    PositionReport_PositionDimension_PositionDimension_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PositionDimension_descriptor() {
    return PositionReport_PositionDimension_descriptor();
  }
  static inline const ::std::string& PositionDimension_Name(PositionDimension value) {
    return PositionReport_PositionDimension_Name(value);
  }
  static inline bool PositionDimension_Parse(const ::std::string& name,
      PositionDimension* value) {
    return PositionReport_PositionDimension_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // float latitude = 4;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 4;
  float latitude() const;
  void set_latitude(float value);

  // float longitude = 5;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 5;
  float longitude() const;
  void set_longitude(float value);

  // float altitude = 6;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 6;
  float altitude() const;
  void set_altitude(float value);

  // float pitch = 7;
  void clear_pitch();
  static const int kPitchFieldNumber = 7;
  float pitch() const;
  void set_pitch(float value);

  // float yaw = 8;
  void clear_yaw();
  static const int kYawFieldNumber = 8;
  float yaw() const;
  void set_yaw(float value);

  // float roll = 9;
  void clear_roll();
  static const int kRollFieldNumber = 9;
  float roll() const;
  void set_roll(float value);

  // @@protoc_insertion_point(class_scope:uavccsds.PositionReport)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  float latitude_;
  float longitude_;
  float altitude_;
  float pitch_;
  float yaw_;
  float roll_;
  mutable int _cached_size_;
  friend struct  protobuf_uavposition_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PositionReport

// float x = 1;
inline void PositionReport::clear_x() {
  x_ = 0;
}
inline float PositionReport::x() const {
  // @@protoc_insertion_point(field_get:uavccsds.PositionReport.x)
  return x_;
}
inline void PositionReport::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:uavccsds.PositionReport.x)
}

// float y = 2;
inline void PositionReport::clear_y() {
  y_ = 0;
}
inline float PositionReport::y() const {
  // @@protoc_insertion_point(field_get:uavccsds.PositionReport.y)
  return y_;
}
inline void PositionReport::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:uavccsds.PositionReport.y)
}

// float z = 3;
inline void PositionReport::clear_z() {
  z_ = 0;
}
inline float PositionReport::z() const {
  // @@protoc_insertion_point(field_get:uavccsds.PositionReport.z)
  return z_;
}
inline void PositionReport::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:uavccsds.PositionReport.z)
}

// float latitude = 4;
inline void PositionReport::clear_latitude() {
  latitude_ = 0;
}
inline float PositionReport::latitude() const {
  // @@protoc_insertion_point(field_get:uavccsds.PositionReport.latitude)
  return latitude_;
}
inline void PositionReport::set_latitude(float value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:uavccsds.PositionReport.latitude)
}

// float longitude = 5;
inline void PositionReport::clear_longitude() {
  longitude_ = 0;
}
inline float PositionReport::longitude() const {
  // @@protoc_insertion_point(field_get:uavccsds.PositionReport.longitude)
  return longitude_;
}
inline void PositionReport::set_longitude(float value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:uavccsds.PositionReport.longitude)
}

// float altitude = 6;
inline void PositionReport::clear_altitude() {
  altitude_ = 0;
}
inline float PositionReport::altitude() const {
  // @@protoc_insertion_point(field_get:uavccsds.PositionReport.altitude)
  return altitude_;
}
inline void PositionReport::set_altitude(float value) {
  
  altitude_ = value;
  // @@protoc_insertion_point(field_set:uavccsds.PositionReport.altitude)
}

// float pitch = 7;
inline void PositionReport::clear_pitch() {
  pitch_ = 0;
}
inline float PositionReport::pitch() const {
  // @@protoc_insertion_point(field_get:uavccsds.PositionReport.pitch)
  return pitch_;
}
inline void PositionReport::set_pitch(float value) {
  
  pitch_ = value;
  // @@protoc_insertion_point(field_set:uavccsds.PositionReport.pitch)
}

// float yaw = 8;
inline void PositionReport::clear_yaw() {
  yaw_ = 0;
}
inline float PositionReport::yaw() const {
  // @@protoc_insertion_point(field_get:uavccsds.PositionReport.yaw)
  return yaw_;
}
inline void PositionReport::set_yaw(float value) {
  
  yaw_ = value;
  // @@protoc_insertion_point(field_set:uavccsds.PositionReport.yaw)
}

// float roll = 9;
inline void PositionReport::clear_roll() {
  roll_ = 0;
}
inline float PositionReport::roll() const {
  // @@protoc_insertion_point(field_get:uavccsds.PositionReport.roll)
  return roll_;
}
inline void PositionReport::set_roll(float value) {
  
  roll_ = value;
  // @@protoc_insertion_point(field_set:uavccsds.PositionReport.roll)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace uavccsds

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::uavccsds::PositionReport_PositionDimension> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::uavccsds::PositionReport_PositionDimension>() {
  return ::uavccsds::PositionReport_PositionDimension_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_uavposition_2eproto__INCLUDED
