// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: uavcommand.proto

#ifndef PROTOBUF_uavcommand_2eproto__INCLUDED
#define PROTOBUF_uavcommand_2eproto__INCLUDED

#include <string.h>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace uavccsds {
class VelocityCommand;
class VelocityCommandDefaultTypeInternal;
extern VelocityCommandDefaultTypeInternal _VelocityCommand_default_instance_;
}  // namespace uavccsds

namespace uavccsds {

namespace protobuf_uavcommand_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_uavcommand_2eproto

enum VelocityCommand_CommandDimension {
  VelocityCommand_CommandDimension_TWO = 0,
  VelocityCommand_CommandDimension_THREE = 1,
  VelocityCommand_CommandDimension_VelocityCommand_CommandDimension_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VelocityCommand_CommandDimension_VelocityCommand_CommandDimension_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VelocityCommand_CommandDimension_IsValid(int value);
const VelocityCommand_CommandDimension VelocityCommand_CommandDimension_CommandDimension_MIN = VelocityCommand_CommandDimension_TWO;
const VelocityCommand_CommandDimension VelocityCommand_CommandDimension_CommandDimension_MAX = VelocityCommand_CommandDimension_THREE;
const int VelocityCommand_CommandDimension_CommandDimension_ARRAYSIZE = VelocityCommand_CommandDimension_CommandDimension_MAX + 1;

const ::google::protobuf::EnumDescriptor* VelocityCommand_CommandDimension_descriptor();
inline const ::std::string& VelocityCommand_CommandDimension_Name(VelocityCommand_CommandDimension value) {
  return ::google::protobuf::internal::NameOfEnum(
    VelocityCommand_CommandDimension_descriptor(), value);
}
inline bool VelocityCommand_CommandDimension_Parse(
    const ::std::string& name, VelocityCommand_CommandDimension* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VelocityCommand_CommandDimension>(
    VelocityCommand_CommandDimension_descriptor(), name, value);
}
// ===================================================================

class VelocityCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:uavccsds.VelocityCommand) */ {
 public:
  VelocityCommand();
  virtual ~VelocityCommand();

  VelocityCommand(const VelocityCommand& from);

  inline VelocityCommand& operator=(const VelocityCommand& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VelocityCommand& default_instance();

  static inline const VelocityCommand* internal_default_instance() {
    return reinterpret_cast<const VelocityCommand*>(
               &_VelocityCommand_default_instance_);
  }

  void Swap(VelocityCommand* other);

  // implements Message ----------------------------------------------

  inline VelocityCommand* New() const PROTOBUF_FINAL { return New(NULL); }

  VelocityCommand* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VelocityCommand& from);
  void MergeFrom(const VelocityCommand& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VelocityCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef VelocityCommand_CommandDimension CommandDimension;
  static const CommandDimension TWO =
    VelocityCommand_CommandDimension_TWO;
  static const CommandDimension THREE =
    VelocityCommand_CommandDimension_THREE;
  static inline bool CommandDimension_IsValid(int value) {
    return VelocityCommand_CommandDimension_IsValid(value);
  }
  static const CommandDimension CommandDimension_MIN =
    VelocityCommand_CommandDimension_CommandDimension_MIN;
  static const CommandDimension CommandDimension_MAX =
    VelocityCommand_CommandDimension_CommandDimension_MAX;
  static const int CommandDimension_ARRAYSIZE =
    VelocityCommand_CommandDimension_CommandDimension_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CommandDimension_descriptor() {
    return VelocityCommand_CommandDimension_descriptor();
  }
  static inline const ::std::string& CommandDimension_Name(CommandDimension value) {
    return VelocityCommand_CommandDimension_Name(value);
  }
  static inline bool CommandDimension_Parse(const ::std::string& name,
      CommandDimension* value) {
    return VelocityCommand_CommandDimension_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // float linear_x = 1;
  void clear_linear_x();
  static const int kLinearXFieldNumber = 1;
  float linear_x() const;
  void set_linear_x(float value);

  // float linear_y = 2;
  void clear_linear_y();
  static const int kLinearYFieldNumber = 2;
  float linear_y() const;
  void set_linear_y(float value);

  // float linear_z = 3;
  void clear_linear_z();
  static const int kLinearZFieldNumber = 3;
  float linear_z() const;
  void set_linear_z(float value);

  // float angular_x = 4;
  void clear_angular_x();
  static const int kAngularXFieldNumber = 4;
  float angular_x() const;
  void set_angular_x(float value);

  // float angular_y = 5;
  void clear_angular_y();
  static const int kAngularYFieldNumber = 5;
  float angular_y() const;
  void set_angular_y(float value);

  // float angular_z = 6;
  void clear_angular_z();
  static const int kAngularZFieldNumber = 6;
  float angular_z() const;
  void set_angular_z(float value);

  // @@protoc_insertion_point(class_scope:uavccsds.VelocityCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float linear_x_;
  float linear_y_;
  float linear_z_;
  float angular_x_;
  float angular_y_;
  float angular_z_;
  mutable int _cached_size_;
  friend struct  protobuf_uavcommand_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// VelocityCommand

// float linear_x = 1;
inline void VelocityCommand::clear_linear_x() {
  linear_x_ = 0;
}
inline float VelocityCommand::linear_x() const {
  // @@protoc_insertion_point(field_get:uavccsds.VelocityCommand.linear_x)
  return linear_x_;
}
inline void VelocityCommand::set_linear_x(float value) {
  
  linear_x_ = value;
  // @@protoc_insertion_point(field_set:uavccsds.VelocityCommand.linear_x)
}

// float linear_y = 2;
inline void VelocityCommand::clear_linear_y() {
  linear_y_ = 0;
}
inline float VelocityCommand::linear_y() const {
  // @@protoc_insertion_point(field_get:uavccsds.VelocityCommand.linear_y)
  return linear_y_;
}
inline void VelocityCommand::set_linear_y(float value) {
  
  linear_y_ = value;
  // @@protoc_insertion_point(field_set:uavccsds.VelocityCommand.linear_y)
}

// float linear_z = 3;
inline void VelocityCommand::clear_linear_z() {
  linear_z_ = 0;
}
inline float VelocityCommand::linear_z() const {
  // @@protoc_insertion_point(field_get:uavccsds.VelocityCommand.linear_z)
  return linear_z_;
}
inline void VelocityCommand::set_linear_z(float value) {
  
  linear_z_ = value;
  // @@protoc_insertion_point(field_set:uavccsds.VelocityCommand.linear_z)
}

// float angular_x = 4;
inline void VelocityCommand::clear_angular_x() {
  angular_x_ = 0;
}
inline float VelocityCommand::angular_x() const {
  // @@protoc_insertion_point(field_get:uavccsds.VelocityCommand.angular_x)
  return angular_x_;
}
inline void VelocityCommand::set_angular_x(float value) {
  
  angular_x_ = value;
  // @@protoc_insertion_point(field_set:uavccsds.VelocityCommand.angular_x)
}

// float angular_y = 5;
inline void VelocityCommand::clear_angular_y() {
  angular_y_ = 0;
}
inline float VelocityCommand::angular_y() const {
  // @@protoc_insertion_point(field_get:uavccsds.VelocityCommand.angular_y)
  return angular_y_;
}
inline void VelocityCommand::set_angular_y(float value) {
  
  angular_y_ = value;
  // @@protoc_insertion_point(field_set:uavccsds.VelocityCommand.angular_y)
}

// float angular_z = 6;
inline void VelocityCommand::clear_angular_z() {
  angular_z_ = 0;
}
inline float VelocityCommand::angular_z() const {
  // @@protoc_insertion_point(field_get:uavccsds.VelocityCommand.angular_z)
  return angular_z_;
}
inline void VelocityCommand::set_angular_z(float value) {
  
  angular_z_ = value;
  // @@protoc_insertion_point(field_set:uavccsds.VelocityCommand.angular_z)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace uavccsds

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::uavccsds::VelocityCommand_CommandDimension> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::uavccsds::VelocityCommand_CommandDimension>() {
  return ::uavccsds::VelocityCommand_CommandDimension_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_uavcommand_2eproto__INCLUDED
